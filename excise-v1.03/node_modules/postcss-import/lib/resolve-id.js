<<<<<<< HEAD
// external tooling
var resolve = require("resolve")

var moduleDirectories = [
  "web_modules",
  "node_modules",
]

function resolveModule(id, opts) {
  return new Promise(function(res, rej) {
    resolve(id, opts, function(err, path) {
      if (err) {
        return rej(err)
      }
      res(path)
    })
=======
"use strict"

// external tooling
const resolve = require("resolve")

const moduleDirectories = ["web_modules", "node_modules"]

function resolveModule(id, opts) {
  return new Promise((res, rej) => {
    resolve(id, opts, (err, path) => (err ? rej(err) : res(path)))
>>>>>>> 09665636ba9818fc952cd8bfe693d791912356d2
  })
}

module.exports = function(id, base, options) {
<<<<<<< HEAD
  var paths = options.path

  var resolveOpts = {
    basedir: base,
    moduleDirectory: moduleDirectories.concat(options.addModulesDirectories),
    paths: paths,
    extensions: [ ".css" ],
    packageFilter: function processPackage(pkg) {
      if (pkg.style) {
        pkg.main = pkg.style
      }
      else if (!pkg.main || !/\.css$/.test(pkg.main)) {
        pkg.main = "index.css"
      }
      return pkg
    },
  }

  return resolveModule("./" + id, resolveOpts)
  .catch(function() {
    return resolveModule(id, resolveOpts)
  })
  .catch(function() {
    if (paths.indexOf(base) === -1) {
      paths.unshift(base)
    }

    throw new Error([
      "Failed to find '" + id + "'",
      "in [ ",
      "    " + paths.join(",\n        "),
      "]",
    ].join("\n    "))
  })
=======
  const paths = options.path

  const resolveOpts = {
    basedir: base,
    moduleDirectory: moduleDirectories.concat(options.addModulesDirectories),
    paths: paths,
    extensions: [".css"],
    packageFilter: function processPackage(pkg) {
      if (pkg.style) pkg.main = pkg.style
      else if (!pkg.main || !/\.css$/.test(pkg.main)) pkg.main = "index.css"
      return pkg
    },
    preserveSymlinks: false,
  }

  return resolveModule(`./${id}`, resolveOpts)
    .catch(() => resolveModule(id, resolveOpts))
    .catch(() => {
      if (paths.indexOf(base) === -1) paths.unshift(base)

      throw new Error(
        `Failed to find '${id}'
  in [
    ${paths.join(",\n        ")}
  ]`
      )
    })
>>>>>>> 09665636ba9818fc952cd8bfe693d791912356d2
}
