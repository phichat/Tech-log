<<<<<<< HEAD
import JSXExpressionContainerMock from './JSXExpressionContainerMock';
import toAST from 'to-ast';

export default function JSXAttributeMock (
  prop,
  value,
  isExpressionContainer = false
) {
=======
import toAST from 'to-ast'; // eslint-disable-line import/no-extraneous-dependencies
import JSXExpressionContainerMock from './JSXExpressionContainerMock';

export default function JSXAttributeMock(prop, value, isExpressionContainer = false) {
>>>>>>> 09665636ba9818fc952cd8bfe693d791912356d2
  let astValue;
  if (value && value.type !== undefined) {
    astValue = value;
  } else {
    astValue = toAST(value);
  }
  let attributeValue = astValue;
<<<<<<< HEAD
  if (
    isExpressionContainer
    || astValue.type !== 'Literal'
  ) {
    attributeValue = JSXExpressionContainerMock(
      astValue
    );
=======
  if (isExpressionContainer || astValue.type !== 'Literal') {
    attributeValue = JSXExpressionContainerMock(astValue);
>>>>>>> 09665636ba9818fc952cd8bfe693d791912356d2
  }

  return {
    type: 'JSXAttribute',
    name: {
      type: 'JSXIdentifier',
      name: prop,
    },
    value: attributeValue,
  };
}
