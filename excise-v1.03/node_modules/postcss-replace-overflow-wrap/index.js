<<<<<<< HEAD
var postcss = require('postcss');

module.exports = postcss.plugin('postcss-replace-overflow-wrap', function (opts) {
    opts = opts || {};
    var method = opts.method || 'replace';

    return function (css, result) { // eslint-disable-line no-unused-vars
        css.walkRules(function (rule) {
            rule.walkDecls(function (decl, i) { // eslint-disable-line no-unused-vars
                if (decl.prop === 'overflow-wrap') {
                    decl.cloneBefore({ prop: 'word-wrap' });
                    if (method === 'replace') {
                        decl.remove();
                    }
                }
            });
=======
const postcss = require('postcss');

module.exports = postcss.plugin('postcss-replace-overflow-wrap', (opts) => {
    opts = opts || {};
    const method = opts.method || 'replace';

    return (css) => {
        css.walkDecls('overflow-wrap', (decl) => {
            decl.cloneBefore({ prop: 'word-wrap' });
            if (method === 'replace') {
                decl.remove();
            }
>>>>>>> 09665636ba9818fc952cd8bfe693d791912356d2
        });
    };
});
