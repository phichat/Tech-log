/**
 * @fileoverview Rule to flag when using new Function
 * @author Ilya Volodin
 */

"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = {
    meta: {
        docs: {
            description: "disallow `new` operators with the `Function` object",
            category: "Best Practices",
            recommended: false
        },

        schema: []
    },

    create(context) {

        //--------------------------------------------------------------------------
        // Helpers
        //--------------------------------------------------------------------------

        /**
<<<<<<< HEAD
         * Checks if the callee is the Function constructor, and if so, reports an issue.
         * @param {ASTNode} node The node to check and report on
         * @returns {void}
         * @private
         */
        function validateCallee(node) {
            if (node.callee.name === "Function") {
                context.report({ node, message: "The Function constructor is eval." });
            }
        }

        return {
            NewExpression: validateCallee,
            CallExpression: validateCallee
=======
         * Reports a node.
         * @param {ASTNode} node The node to report
         * @returns {void}
         * @private
         */
        function report(node) {
            context.report({ node, message: "The Function constructor is eval." });
        }

        return {
            "NewExpression[callee.name = 'Function']": report,
            "CallExpression[callee.name = 'Function']": report
>>>>>>> 09665636ba9818fc952cd8bfe693d791912356d2
        };

    }
};
